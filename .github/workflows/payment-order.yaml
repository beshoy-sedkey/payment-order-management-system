name: Laravel CI/CD Pipeline

on:
  push:
    branches: [main] # Adjust if using a different branch
  pull_request:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1 # Specify your PHP version
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, bcmath, gd
          coverage: xdebug # For test coverage

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Prepare environment file
        run: cp .env.example .env
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          PAYMENT_GATEWAY_API_KEY: ${{ secrets.PAYMENT_GATEWAY_API_KEY }} # Example for payment gateway
          # Add other secrets as needed

      - name: Run database migrations
        run: php artisan migrate --database=testing --force

      - name: Execute tests
        run: vendor/bin/phpunit --coverage-text

      - name: Generate coverage report
        run: php vendor/bin/php artisan test --coverage-clover coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # Get this from Codecov
          files: ./coverage.xml

  deploy:
    needs: tests # Run tests before deploying
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Deploy only on pushes to main
    environment:
      name: production
      url: ${{ steps.deploy-to-heroku.outputs.url }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, bcmath, gd

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader --no-dev

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          procfile: "web: php artisan serve --host=0.0.0.0 --port=$PORT"
